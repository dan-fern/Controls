function [ Xdot ] = robotSS( t, X, Xin )
%Let's make our state space model.  

%lets say each thruster produces up to 29.4 N of force, linearly over it's
%control range.  

%Our States: x, xdot, y, ydot, z, zdot,  w, wdot (yaw), r, rdot (roll)
%Our input matrix: m1 = Front Port, m2 = Front Starboard, m3 = Rear
%Starboard, m4 = Rear Port, m5 = Upper Port, m6 = Upper Starboard.
%These motor inputs are treated as being from 0 to 1.  
% X coord forward, Y coord to Starboard, Z coord down from surface.  
d = .1; %Damping in Newton-Meters/s. who knows.  
m = 22.6; %Mass in kilos.  About 50 lbs.  
In = .71; %Estimated Intertia, in kg*m^2
mT = 29.4; %Motor Thrust, in Newtons

tD = .2; %Thruster distance from CoM, estimated.  
fA = degtorad(35); %Forward Thruster Angle
aA = degtorad(45); %Aft Thruster Angle
zA = degtorad(20); %Z Thruster Angle, guessed at this one.  
tA = degtorad(10); % Angle of forward thrusters from optimal

A = [0 1 0 0 0 0 0 0 0 0; ...
     0 -d/m 0 0 0 0 0 0 0 0; ...
     0 0 0 1 0 0 0 0 0 0; ...
     0 0 0 -d/m 0 0 0 0 0 0; ...
     0 0 0 0 0 1 0 0 0 0; ...
     0 0 0 0 0 -d/m 0 0 0 0; ...
     0 0 0 0 0 0 0 1 0 0; ...
     0 0 0 0 0 0 0 -d/m 0 0; ...
     0 0 0 0 0 0 0 0 0 1; ...
     0 0 0 0 0 0 0 0 0 -d/m ]

 B = [ 0 0 0 0 0 0;...
       mT*cos(fA)/m mT*cos(fA)/m -mT*cos(aA)/m -mT*cos(aA)/m 0 0;...
       0 0 0 0 0 0;...
       mT*sin(fA)/m -mT*sin(fA)/m -mT*sin(aA)/m mT*sin(aA)/m mT*sin(zA)/m -mT*sin(zA)/m;...
       0 0 0 0 0 0;...
       0 0 0 0 -mT*cos(zA)/m -mT*cos(zA)/m;...
       0 0 0 0 0 0;...
       mT*tD*cos(tA)/In -mT*tD*cos(tA)/In mT*tD/In -mT*tD/In 0 0;...
       0 0 0 0 0 0;...
       0 0 0 0 -mT*tD/In mT*tD/In];
     
 D = [0;0;0;0;0;0;0;0;0;0];
%  u = [0;0;0;0;0;0];
u = X-Xin;

Xdot = A*X+B*u+D;
 
 %controllability = [B, A*B, A^2*B, A^3*B, A^4*B, A^5*B, A^6*B, A^7*B, A^8*B, A^9*B]
 
 
 
 
 
end

